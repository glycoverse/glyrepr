[{"path":[]},{"path":"https://glycoverse.github.io/glyrepr/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://glycoverse.github.io/glyrepr/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://glycoverse.github.io/glyrepr/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://glycoverse.github.io/glyrepr/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://glycoverse.github.io/glyrepr/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://glycoverse.github.io/glyrepr/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://glycoverse.github.io/glyrepr/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://glycoverse.github.io/glyrepr/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://glycoverse.github.io/glyrepr/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://glycoverse.github.io/glyrepr/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://glycoverse.github.io/glyrepr/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://glycoverse.github.io/glyrepr/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to glyrepr","title":"Contributing to glyrepr","text":"outlines propose change glyrepr. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://glycoverse.github.io/glyrepr/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to glyrepr","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://glycoverse.github.io/glyrepr/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to glyrepr","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://glycoverse.github.io/glyrepr/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to glyrepr","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"glycoverse/glyrepr\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://glycoverse.github.io/glyrepr/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to glyrepr","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://glycoverse.github.io/glyrepr/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to glyrepr","text":"Please note glyrepr project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://glycoverse.github.io/glyrepr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 glyrepr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://glycoverse.github.io/glyrepr/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with glyrepr","title":"Getting help with glyrepr","text":"Thanks using glyrepr! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://glycoverse.github.io/glyrepr/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with glyrepr","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty incredible ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://glycoverse.github.io/glyrepr/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with glyrepr","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://glycoverse.github.io/glyrepr/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with glyrepr","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://glycoverse.github.io/glyrepr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bin Fu. Author, maintainer.","code":""},{"path":"https://glycoverse.github.io/glyrepr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fu B (2025). glyrepr: Representation Glycan Structures R. R package version 0.3.0, https://glycoverse.github.io/glyrepr/.","code":"@Manual{,   title = {glyrepr: Representation for Glycan Structures in R},   author = {Bin Fu},   year = {2025},   note = {R package version 0.3.0},   url = {https://glycoverse.github.io/glyrepr/}, }"},{"path":"https://glycoverse.github.io/glyrepr/index.html","id":"glyrepr-","dir":"","previous_headings":"","what":"Representation for Glycan Structures in R","title":"Representation for Glycan Structures in R","text":"package wrapper ‘igraph’ representing glycan structures R. introduces vectorized S3 class called “glyrepr_structure” along suite functions create manipulate glycan structures efficiently. glycomics glycoproteomics researcher, likely won’t need interact package directly. need know defines “glyrepr_structure” S3 class represent glycan structures vectorized manner, won’t surprised encounter name elsewhere glycoverse. fact, functions packages heavily used glycoverse packages glyparse glymotif, probably already using use.","code":""},{"path":"https://glycoverse.github.io/glyrepr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Representation for Glycan Structures in R","text":"can install development version glyrepr GitHub :","code":"# install.packages(\"pak\") pak::pak(\"glycoverse/glyrepr\")"},{"path":"https://glycoverse.github.io/glyrepr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Representation for Glycan Structures in R","text":"","code":"library(glyrepr) library(igraph) #>  #> Attaching package: 'igraph' #> The following objects are masked from 'package:stats': #>  #>     decompose, spectrum #> The following object is masked from 'package:base': #>  #>     union  # Create glycan compositions comp <- glycan_composition(   c(Man = 5, GlcNAc = 2),   c(Man = 3, Gal = 2, GlcNAc = 4, Fuc = 1, Neu5Ac = 2) ) comp #> <glycan_composition[2]> #> [1] Man(5)GlcNAc(2)                      Man(3)Gal(2)GlcNAc(4)Fuc(1)Neu5Ac(2)  # Create glycan structures # Here we manually create an igraph object and convert it to a glycan structure. # In practice, you should use the `glyparse` package to create glycan structures # from IUPAC names or other formats. graph <- make_graph(~ 1-+2, 2-+3) igraph::V(graph)$mono <- c(\"Glc\", \"Gal\", \"Glc\") igraph::V(graph)$sub <- \"\" igraph::E(graph)$linkage <- c(\"b1-4\", \"b1-4\") graph$anomer <- \"a1\" graph$alditol <- FALSE glycan <- glycan_structure(graph) glycan #> <glycan_structure[1]> #> [1] Glc(b1-4)Gal(b1-4)Glc(a1- #> # Unique structures: 1  # Get the composition of a glycan structure as_glycan_composition(glycan) #> <glycan_composition[1]> #> [1] Glc(2)Gal(1)"},{"path":"https://glycoverse.github.io/glyrepr/reference/add_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Colors to Monosaccharides — add_colors","title":"Add Colors to Monosaccharides — add_colors","text":"Add Colors Monosaccharides","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/add_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Colors to Monosaccharides — add_colors","text":"","code":"add_colors(monos, colored = TRUE)"},{"path":"https://glycoverse.github.io/glyrepr/reference/add_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Colors to Monosaccharides — add_colors","text":"monos character vector monosaccharide names colored logical value indicating whether add colors","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/add_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Colors to Monosaccharides — add_colors","text":"character vector ANSI color codes","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/add_gray_linkages.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Gray Color to Linkages in IUPAC String — add_gray_linkages","title":"Add Gray Color to Linkages in IUPAC String — add_gray_linkages","text":"Add Gray Color Linkages IUPAC String","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/add_gray_linkages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Gray Color to Linkages in IUPAC String — add_gray_linkages","text":"","code":"add_gray_linkages(iupac_text)"},{"path":"https://glycoverse.github.io/glyrepr/reference/add_gray_linkages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Gray Color to Linkages in IUPAC String — add_gray_linkages","text":"iupac_text Character string IUPAC notation","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/add_gray_linkages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Gray Color to Linkages in IUPAC String — add_gray_linkages","text":"Character string linkages colored gray","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/as_glycan_composition.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to Glycan Composition — as_glycan_composition","title":"Convert to Glycan Composition — as_glycan_composition","text":"Convert object glycan composition.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/as_glycan_composition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to Glycan Composition — as_glycan_composition","text":"","code":"as_glycan_composition(x)"},{"path":"https://glycoverse.github.io/glyrepr/reference/as_glycan_composition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to Glycan Composition — as_glycan_composition","text":"x object convert glycan composition. Can named integer vector, list named integer vectors, existing glyrepr_composition object.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/as_glycan_composition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to Glycan Composition — as_glycan_composition","text":"glyrepr_composition object.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/as_glycan_composition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to Glycan Composition — as_glycan_composition","text":"","code":"# Convert a named vector as_glycan_composition(c(Hex = 5, HexNAc = 2)) #> <glycan_composition[1]> #> [1] Hex(5)HexNAc(2) # Convert a list of named vectors as_glycan_composition(list(c(Hex = 5, HexNAc = 2), c(Hex = 3, HexNAc = 1))) #> <glycan_composition[2]> #> [1] Hex(5)HexNAc(2) #> [2] Hex(3)HexNAc(1) # Convert an existing composition (returns as-is) comp <- glycan_composition(c(Hex = 5, HexNAc = 2)) as_glycan_composition(comp) #> <glycan_composition[1]> #> [1] Hex(5)HexNAc(2)"},{"path":"https://glycoverse.github.io/glyrepr/reference/as_glycan_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to Glycan Structure Vector — as_glycan_structure","title":"Convert to Glycan Structure Vector — as_glycan_structure","text":"Convert object glycan structure vector.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/as_glycan_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to Glycan Structure Vector — as_glycan_structure","text":"","code":"as_glycan_structure(x)"},{"path":"https://glycoverse.github.io/glyrepr/reference/as_glycan_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to Glycan Structure Vector — as_glycan_structure","text":"x object convert glycan structure vector. Can igraph object, list igraph objects, existing glyrepr_structure object.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/as_glycan_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to Glycan Structure Vector — as_glycan_structure","text":"glyrepr_structure object.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/as_glycan_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to Glycan Structure Vector — as_glycan_structure","text":"","code":"library(igraph) #>  #> Attaching package: ‘igraph’ #> The following objects are masked from ‘package:stats’: #>  #>     decompose, spectrum #> The following object is masked from ‘package:base’: #>  #>     union  # Convert a single igraph graph <- make_graph(~ 1-+2) V(graph)$mono <- c(\"GlcNAc\", \"GlcNAc\") V(graph)$sub <- \"\" E(graph)$linkage <- \"b1-4\" graph$anomer <- \"a1\" graph$alditol <- FALSE as_glycan_structure(graph) #> <glycan_structure[1]> #> [1] GlcNAc(b1-4)GlcNAc(a1- #> # Unique structures: 1  # Convert a list of igraphs o_glycan_vec <- o_glycan_core_1() o_glycan_graph <- get_structure_graphs(o_glycan_vec, 1) as_glycan_structure(list(graph, o_glycan_graph)) #> <glycan_structure[2]> #> [1] GlcNAc(b1-4)GlcNAc(a1- #> [2] Gal(b1-3)GalNAc(a1- #> # Unique structures: 2"},{"path":"https://glycoverse.github.io/glyrepr/reference/available_monosaccharides.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Available Monosaacharides — available_monosaccharides","title":"Get Available Monosaacharides — available_monosaccharides","text":"function returns character vector monosaccharide names given type. See get_mono_type() monosaacharide types.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/available_monosaccharides.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Available Monosaacharides — available_monosaccharides","text":"","code":"available_monosaccharides(mono_type = \"all\")"},{"path":"https://glycoverse.github.io/glyrepr/reference/available_monosaccharides.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Available Monosaacharides — available_monosaccharides","text":"mono_type character string specifying type monosaccharides. Can \"\", \"generic\", \"concrete\". Default \"\".","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/available_monosaccharides.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Available Monosaacharides — available_monosaccharides","text":"character vector monosaccharide names.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/available_substituents.html","id":null,"dir":"Reference","previous_headings":"","what":"Available Substituents — available_substituents","title":"Available Substituents — available_substituents","text":"Get available substituents monosaccharides.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/available_substituents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available Substituents — available_substituents","text":"","code":"available_substituents()"},{"path":"https://glycoverse.github.io/glyrepr/reference/available_substituents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available Substituents — available_substituents","text":"character vector.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/calculate_depths.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate depth (longest path to leaf) for each node — calculate_depths","title":"Calculate depth (longest path to leaf) for each node — calculate_depths","text":"Calculate depth (longest path leaf) node","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/calculate_depths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate depth (longest path to leaf) for each node — calculate_depths","text":"","code":"calculate_depths(glycan, root)"},{"path":"https://glycoverse.github.io/glyrepr/reference/calculate_depths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate depth (longest path to leaf) for each node — calculate_depths","text":"glycan igraph object representing glycan structure root Root vertex","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/calculate_depths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate depth (longest path to leaf) for each node — calculate_depths","text":"Named vector depths node","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/colorize_iupac_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Colors to IUPAC String (Monosaccharides + Gray Linkages) — colorize_iupac_string","title":"Apply Colors to IUPAC String (Monosaccharides + Gray Linkages) — colorize_iupac_string","text":"Apply Colors IUPAC String (Monosaccharides + Gray Linkages)","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/colorize_iupac_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Colors to IUPAC String (Monosaccharides + Gray Linkages) — colorize_iupac_string","text":"","code":"colorize_iupac_string(iupac_text, mono_names)"},{"path":"https://glycoverse.github.io/glyrepr/reference/colorize_iupac_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Colors to IUPAC String (Monosaccharides + Gray Linkages) — colorize_iupac_string","text":"iupac_text Character string IUPAC notation mono_names Character vector monosaccharide names color","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/colorize_iupac_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Colors to IUPAC String (Monosaccharides + Gray Linkages) — colorize_iupac_string","text":"Character string colored monosaccharides gray linkages","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/compare_linkages.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two linkages — compare_linkages","title":"Compare two linkages — compare_linkages","text":"Compare two linkages","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/compare_linkages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two linkages — compare_linkages","text":"","code":"compare_linkages(linkage1, linkage2)"},{"path":"https://glycoverse.github.io/glyrepr/reference/compare_linkages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two linkages — compare_linkages","text":"linkage1, linkage2 Character strings representing linkages","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/compare_linkages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two linkages — compare_linkages","text":"Integer: -1 linkage1 < linkage2, 0 equal, 1 linkage1 > linkage2","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/convert_mono_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Monosaccharide Types — convert_mono_type","title":"Convert Monosaccharide Types — convert_mono_type","text":"function converts monosaccharide types monosaccharide characters, glycan compositions, glycan structures. Supported types: \"concrete\" \"generic\" (see details ). conversion can done \"concrete\" \"generic\".","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/convert_mono_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Monosaccharide Types — convert_mono_type","text":"","code":"convert_mono_type(x, to)  # S3 method for class 'character' convert_mono_type(x, to)  # S3 method for class 'glyrepr_structure' convert_mono_type(x, to)  # S3 method for class 'glyrepr_composition' convert_mono_type(x, to)"},{"path":"https://glycoverse.github.io/glyrepr/reference/convert_mono_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Monosaccharide Types — convert_mono_type","text":"x Either objects: character monosaccharide; glycan composition vector (\"glyrepr_composition\" object); glycan structure vector (\"glyrepr_structure\" object). character string specifying target monosaccharide type.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/convert_mono_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Monosaccharide Types — convert_mono_type","text":"new object class x monosaccharides converted target type.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/convert_mono_type.html","id":"two-types-of-monosaccharides","dir":"Reference","previous_headings":"","what":"Two types of monosaccharides","title":"Convert Monosaccharide Types — convert_mono_type","text":"two types monosaccharides: concrete: e.g. \"Gal\", \"GlcNAc\", \"Glc\", \"Fuc\", etc. generic: e.g. \"Hex\", \"HexNAc\", \"HexA\", \"HexN\", etc. full list monosaccharides, use available_monosaccharides().","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/convert_mono_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Monosaccharide Types — convert_mono_type","text":"","code":"# Allowed convert_mono_type(c(\"Gal\", \"GlcNAc\"), to = \"generic\")  # concrete -> generic #> [1] \"Hex\"    \"HexNAc\"  # Not allowed if (FALSE) { # \\dontrun{ convert_mono_type(c(\"Hex\", \"HexNAc\"), to = \"concrete\")  # generic -> concrete } # }  # Convert glycan compositions comps <- glycan_composition(   c(Hex = 5, HexNAc = 2),   c(Hex = 5, HexNAc = 4, dHex = 1) ) convert_mono_type(comps, to = \"generic\") #> <glycan_composition[2]> #> [1] Hex(5)HexNAc(2) #> [2] Hex(5)HexNAc(4)dHex(1)  # Convert glycan structures strucs <- glycan_structure(   n_glycan_core(),   o_glycan_core_1() ) convert_mono_type(strucs, to = \"generic\") #> <glycan_structure[2]> #> [1] Hex(a1-3)[Hex(a1-6)]Hex(b1-4)HexNAc(b1-4)HexNAc(?1- #> [2] Hex(b1-3)HexNAc(a1- #> # Unique structures: 2"},{"path":"https://glycoverse.github.io/glyrepr/reference/count_mono.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Number of Monosaccharides — count_mono","title":"Get the Number of Monosaccharides — count_mono","text":"Get number monosaccharides glycan composition glycan structure. mono \"generic\" (e.g. \"Hex\", \"HexNAc\"), counts \"concrete\" monosaccharides match. example, \"Hex\" count Glc, Man, Gal, etc.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/count_mono.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Number of Monosaccharides — count_mono","text":"","code":"count_mono(x, mono)  # S3 method for class 'glyrepr_composition' count_mono(x, mono)  # S3 method for class 'glyrepr_structure' count_mono(x, mono)"},{"path":"https://glycoverse.github.io/glyrepr/reference/count_mono.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Number of Monosaccharides — count_mono","text":"x glycan composition (glyrepr_composition) glycan structure (glyrepr_structure) vector mono monosaccharide count. character scalar.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/count_mono.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Number of Monosaccharides — count_mono","text":"numeric vector length x.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/dot-parse_iupac_condensed_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse IUPAC-condensed string to glycan structure — .parse_iupac_condensed_single","title":"Parse IUPAC-condensed string to glycan structure — .parse_iupac_condensed_single","text":"Internal functions parsing IUPAC-condensed strings igraph objects. supports as_glycan_structure.character method.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/dot-parse_iupac_condensed_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse IUPAC-condensed string to glycan structure — .parse_iupac_condensed_single","text":"","code":".parse_iupac_condensed_single(x)"},{"path":"https://glycoverse.github.io/glyrepr/reference/dot-parse_iupac_condensed_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse IUPAC-condensed string to glycan structure — .parse_iupac_condensed_single","text":"x single IUPAC-condensed string","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/dot-parse_iupac_condensed_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse IUPAC-condensed string to glycan structure — .parse_iupac_condensed_single","text":"igraph object representing glycan structure","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/format_glycan_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Glycan Structure with Optional Colors — format_glycan_structure","title":"Format Glycan Structure with Optional Colors — format_glycan_structure","text":"Format Glycan Structure Optional Colors","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/format_glycan_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Glycan Structure with Optional Colors — format_glycan_structure","text":"","code":"format_glycan_structure(x, colored = TRUE)"},{"path":"https://glycoverse.github.io/glyrepr/reference/format_glycan_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Glycan Structure with Optional Colors — format_glycan_structure","text":"x glyrepr_structure object colored logical value indicating whether add colors","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/format_glycan_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Glycan Structure with Optional Colors — format_glycan_structure","text":"character vector formatted structures","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/get_mono_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Color for Concrete Monosaccharides — get_mono_color","title":"Get Color for Concrete Monosaccharides — get_mono_color","text":"Get Color Concrete Monosaccharides","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/get_mono_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Color for Concrete Monosaccharides — get_mono_color","text":"","code":"get_mono_color(mono)"},{"path":"https://glycoverse.github.io/glyrepr/reference/get_mono_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Color for Concrete Monosaccharides — get_mono_color","text":"mono monosaccharide name (character)","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/get_mono_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Color for Concrete Monosaccharides — get_mono_color","text":"color code (character)","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/get_mono_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Monosaccharide Types — get_mono_type","title":"Get Monosaccharide Types — get_mono_type","text":"function determines type monosaccharides character vectors, glycan compositions, glycan structures. Supported types: \"concrete\" \"generic\" (see details ).","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/get_mono_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Monosaccharide Types — get_mono_type","text":"","code":"get_mono_type(x)  # S3 method for class 'character' get_mono_type(x)  # S3 method for class 'glyrepr_structure' get_mono_type(x)  # S3 method for class 'glyrepr_composition' get_mono_type(x)"},{"path":"https://glycoverse.github.io/glyrepr/reference/get_mono_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Monosaccharide Types — get_mono_type","text":"x Either objects: character vector monosaccharide names; glycan composition vector (\"glyrepr_composition\" object); glycan structure vector (\"glyrepr_structure\" object).","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/get_mono_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Monosaccharide Types — get_mono_type","text":"character vector specifying monosaccharide type(s). structures compositions, returns type element.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/get_mono_type.html","id":"two-types-of-monosaccharides","dir":"Reference","previous_headings":"","what":"Two types of monosaccharides","title":"Get Monosaccharide Types — get_mono_type","text":"two types monosaccharides: concrete: e.g. \"Gal\", \"GlcNAc\", \"Glc\", \"Fuc\", etc. generic: e.g. \"Hex\", \"HexNAc\", \"HexA\", \"HexN\", etc. full list monosaccharides, use available_monosaccharides().","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyrepr/reference/get_mono_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Monosaccharide Types — get_mono_type","text":"","code":"# Character vector get_mono_type(c(\"Gal\", \"Hex\")) #> [1] \"concrete\" \"generic\"   # Glycan structures get_mono_type(n_glycan_core(mono_type = \"concrete\")) #> [1] \"concrete\" get_mono_type(n_glycan_core(mono_type = \"generic\")) #> [1] \"generic\"  # Glycan compositions comp <- glycan_composition(c(Glc = 2, GalNAc = 1)) get_mono_type(comp) #> [1] \"concrete\""},{"path":"https://glycoverse.github.io/glyrepr/reference/get_structure_graphs.html","id":null,"dir":"Reference","previous_headings":"","what":"Access Individual Glycan Structures — get_structure_graphs","title":"Access Individual Glycan Structures — get_structure_graphs","text":"Extract individual glycan structure graphs glycan structure vector.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/get_structure_graphs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access Individual Glycan Structures — get_structure_graphs","text":"","code":"get_structure_graphs(x, i = NULL)"},{"path":"https://glycoverse.github.io/glyrepr/reference/get_structure_graphs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access Individual Glycan Structures — get_structure_graphs","text":"x glycan structure vector. Index indices structures extract.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/get_structure_graphs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access Individual Glycan Structures — get_structure_graphs","text":"list glycan_structure (igraph) objects.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/get_structure_graphs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access Individual Glycan Structures — get_structure_graphs","text":"","code":"structures <- glycan_structure(o_glycan_core_1(), n_glycan_core()) get_structure_graphs(structures, 1) #> IGRAPH a2f18aa DN-- 2 1 --  #> + attr: anomer (g/c), alditol (g/l), name (v/c), mono (v/c), sub (v/c), #> | linkage (e/c) #> + edge from a2f18aa (vertex names): #> [1] 1->2 get_structure_graphs(structures, c(1, 2)) #> [[1]] #> IGRAPH a2f18aa DN-- 2 1 --  #> + attr: anomer (g/c), alditol (g/l), name (v/c), mono (v/c), sub (v/c), #> | linkage (e/c) #> + edge from a2f18aa (vertex names): #> [1] 1->2 #>  #> [[2]] #> IGRAPH 4ee63e0 DN-- 5 4 --  #> + attr: anomer (g/c), alditol (g/l), name (v/c), mono (v/c), sub (v/c), #> | linkage (e/c) #> + edges from 4ee63e0 (vertex names): #> [1] 1->2 2->3 3->4 3->5 #>"},{"path":"https://glycoverse.github.io/glyrepr/reference/glycan_composition.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Glycan Composition — glycan_composition","title":"Create a Glycan Composition — glycan_composition","text":"Create glycan composition list named integer vectors.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/glycan_composition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Glycan Composition — glycan_composition","text":"","code":"glycan_composition(...)  is_glycan_composition(x)"},{"path":"https://glycoverse.github.io/glyrepr/reference/glycan_composition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Glycan Composition — glycan_composition","text":"... Named integer vectors. Names monosaccharides, values numbers residues. x list named integer vectors.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/glycan_composition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Glycan Composition — glycan_composition","text":"glyrepr_composition object.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/glycan_composition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Glycan Composition — glycan_composition","text":"","code":"# A vector with one composition (generic monosaccharides) glycan_composition(c(Hex = 5, HexNAc = 2)) #> <glycan_composition[1]> #> [1] Hex(5)HexNAc(2) # A vector with multiple compositions glycan_composition(c(Hex = 5, HexNAc = 2), c(Hex = 5, HexNAc = 4, dHex = 2)) #> <glycan_composition[2]> #> [1] Hex(5)HexNAc(2) #> [2] Hex(5)HexNAc(4)dHex(2) # Residues are reordered automatically glycan_composition(c(HexNAc = 1, Hex = 2)) #> <glycan_composition[1]> #> [1] Hex(2)HexNAc(1) # An example for generic monosaccharides glycan_composition(c(Hex = 2, HexNAc = 1)) #> <glycan_composition[1]> #> [1] Hex(2)HexNAc(1) # An example for concrete monosaccharides glycan_composition(c(Glc = 2, Gal = 1)) #> <glycan_composition[1]> #> [1] Glc(2)Gal(1)"},{"path":"https://glycoverse.github.io/glyrepr/reference/glycan_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Glycan Structure Vector — glycan_structure","title":"Create a Glycan Structure Vector — glycan_structure","text":"vector glycan structures efficient storage using hash-based deduplication.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/glycan_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Glycan Structure Vector — glycan_structure","text":"","code":"glycan_structure(...)  is_glycan_structure(x)"},{"path":"https://glycoverse.github.io/glyrepr/reference/glycan_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Glycan Structure Vector — glycan_structure","text":"... igraph graph objects converted glycan structures, existing glycan structure vectors. x object check convert.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/glycan_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Glycan Structure Vector — glycan_structure","text":"glycan structure vector object.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/glycan_structure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Glycan Structure Vector — glycan_structure","text":"underlying implementation uses hash values IUPAC codes glycan structures. prevents redundant storage computation, useful glycan structures. glycan structure directed graph modeling glycan structure, nodes monosaccharides edges linkages.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/glycan_structure.html","id":"s-classes","dir":"Reference","previous_headings":"","what":"S3 Classes","title":"Create a Glycan Structure Vector — glycan_structure","text":"glycan structure vector vctrs record additional S3 class glyrepr_structure. Therefore, sloop::s3_class() glycan structure vector c(\"glyrepr_structure\", \"vctrs_vctr\"). Constraints individual structures: graph must directed outward tree (reducing end root). graph must graph attribute anomer, form \"a1\". graph must graph attribute alditol, logical value. graph must vertex attribute mono monosaccharide names. graph must vertex attribute sub substituents. graph must edge attribute linkage linkages. Monosaccharide name must known, either generic (Hex, HexNAc, etc.) concrete (Glc, Gal, etc.), mixture . NA allowed. Substituent must valid, form \"xY\", x position Y substituent name, e.g. \"2Ac\", \"3S\", etc. Linkages must valid, form \"/bX-Y\", X Y integers, e.g. \"b1-4\", \"a2-3\", etc. NA allowed.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/glycan_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Glycan Structure Vector — glycan_structure","text":"","code":"library(igraph)  # A simple glycan structure: GlcNAc(b1-4)GlcNAc graph <- make_graph(~ 1-+2)  # 1 and 2 are monosaccharides V(graph)$mono <- c(\"GlcNAc\", \"GlcNAc\") V(graph)$sub <- \"\" E(graph)$linkage <- \"b1-4\" graph$anomer <- \"a1\" graph$alditol <- FALSE  # Create glycan structure vector glycan_structure(graph) #> <glycan_structure[1]> #> [1] GlcNAc(b1-4)GlcNAc(a1- #> # Unique structures: 1  # Create vector with multiple structures glycan_structure(graph, o_glycan_core_1()) #> <glycan_structure[2]> #> [1] GlcNAc(b1-4)GlcNAc(a1- #> [2] Gal(b1-3)GalNAc(a1- #> # Unique structures: 2"},{"path":"https://glycoverse.github.io/glyrepr/reference/glyrepr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"glyrepr: Representation for Glycan Structures in R — glyrepr-package","title":"glyrepr: Representation for Glycan Structures in R — glyrepr-package","text":"package wrapper 'igraph' representing glycan structures R. provides set functions create manipulate glycan structures, visualize graph format.","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyrepr/reference/glyrepr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"glyrepr: Representation for Glycan Structures in R — glyrepr-package","text":"Maintainer: Bin Fu 23110220018@m.fudan.edu.cn (ORCID)","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/glyrepr-vctrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal vctrs methods — glyrepr-vctrs","title":"Internal vctrs methods — glyrepr-vctrs","text":"Internal vctrs methods","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/has_linkages.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if a Glycan Structure has Linkages — has_linkages","title":"Determine if a Glycan Structure has Linkages — has_linkages","text":"Unknown linkages glycan structure represented \"??-?\". function checks linkages glycan structure unknown. Note even one linkage partial known (e.g. \"?-?\"), function return TRUE.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/has_linkages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if a Glycan Structure has Linkages — has_linkages","text":"","code":"has_linkages(glycan)"},{"path":"https://glycoverse.github.io/glyrepr/reference/has_linkages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if a Glycan Structure has Linkages — has_linkages","text":"glycan glyrepr_structure vector.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/has_linkages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine if a Glycan Structure has Linkages — has_linkages","text":"logical vector indicating glycan structure linkages.","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyrepr/reference/has_linkages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine if a Glycan Structure has Linkages — has_linkages","text":"","code":"glycan <- o_glycan_core_1(linkage = TRUE) has_linkages(glycan) #> [1] TRUE print(glycan) #> <glycan_structure[1]> #> [1] Gal(b1-3)GalNAc(a1- #> # Unique structures: 1  glycan <- remove_linkages(glycan) has_linkages(glycan) #> [1] FALSE print(glycan) #> <glycan_structure[1]> #> [1] Gal(??-?)GalNAc(a1- #> # Unique structures: 1"},{"path":"https://glycoverse.github.io/glyrepr/reference/is_known_monosaccharide.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a Monosaccharide is Known — is_known_monosaccharide","title":"Check if a Monosaccharide is Known — is_known_monosaccharide","text":"function checks vector monosaccharide names known.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/is_known_monosaccharide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a Monosaccharide is Known — is_known_monosaccharide","text":"","code":"is_known_monosaccharide(mono)"},{"path":"https://glycoverse.github.io/glyrepr/reference/is_known_monosaccharide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a Monosaccharide is Known — is_known_monosaccharide","text":"mono character vector monosaccharide names.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/is_known_monosaccharide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a Monosaccharide is Known — is_known_monosaccharide","text":"logical vector.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/n_glycan_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Glycan Structures — n_glycan_core","title":"Example Glycan Structures — n_glycan_core","text":"Create example glycan structures testing demonstration. Includes N-glycan core O-glycan core 1 core 2.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/n_glycan_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Glycan Structures — n_glycan_core","text":"","code":"n_glycan_core(linkage = TRUE, mono_type = \"concrete\")  o_glycan_core_1(linkage = TRUE, mono_type = \"concrete\")  o_glycan_core_2(linkage = TRUE, mono_type = \"concrete\")"},{"path":"https://glycoverse.github.io/glyrepr/reference/n_glycan_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Example Glycan Structures — n_glycan_core","text":"linkage logical indicating whether include linkages (e.g. \"b1-4\"). Default TRUE. mono_type character string specifying type monosaccharides. Can \"generic\" (Hex, HexNAc, dHex, NeuAc, etc.) \"concrete\" (Man, Gal, HexNAc, Fuc, etc.). Default \"concrete\".","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/n_glycan_core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example Glycan Structures — n_glycan_core","text":"glycan structure (igraph) object.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/n_glycan_core.html","id":"n-glycan-core","dir":"Reference","previous_headings":"","what":"N-Glycan Core","title":"Example Glycan Structures — n_glycan_core","text":"N-Glycans branched oligosaccharides bound, commonly, via GlcNAc Asn residue protein backbone. common motif N-glycans chitobiose core, composed three mannose two GlcNAc moieties, commonly attached protein backbone via GlcNAc. mannose residue branched connected via α1,3- α1,6-glycosidic linkages two mannose building blocks.","code":"Man   a1-6 \\   b1-4      b1-4         Man -- GlcNAc -- GlcNAc   a1-3 /     Man"},{"path":"https://glycoverse.github.io/glyrepr/reference/n_glycan_core.html","id":"o-glycan-core","dir":"Reference","previous_headings":"","what":"O-Glycan Core","title":"Example Glycan Structures — n_glycan_core","text":"O-Glycans highly abundant extracellular proteins. Generally, O-glycans extended following four major core structures: core 1, core 2, core 3, core 4. first two far common core structures O-glycosylation found throughout body. core 1:   core 2:","code":"GalNAc    / b1-3 Gal GlcNAc       \\ b1-6        GalNAc       / b1-3    Gal"},{"path":"https://glycoverse.github.io/glyrepr/reference/n_glycan_core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example Glycan Structures — n_glycan_core","text":"","code":"print(n_glycan_core(), verbose = TRUE) #> <glycan_structure[1]> #> [1] Man(a1-3)[Man(a1-6)]Man(b1-4)GlcNAc(b1-4)GlcNAc(?1- #> # Unique structures: 1 print(o_glycan_core_1(), verbose = TRUE) #> <glycan_structure[1]> #> [1] Gal(b1-3)GalNAc(a1- #> # Unique structures: 1"},{"path":"https://glycoverse.github.io/glyrepr/reference/parse_linkage.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse linkage string into comparable components — parse_linkage","title":"Parse linkage string into comparable components — parse_linkage","text":"Parse linkage string comparable components","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/parse_linkage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse linkage string into comparable components — parse_linkage","text":"","code":"parse_linkage(linkage)"},{"path":"https://glycoverse.github.io/glyrepr/reference/parse_linkage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse linkage string into comparable components — parse_linkage","text":"linkage Character string format \"xy-z\" (e.g., \"b1-4\", \"a2-3\")","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/parse_linkage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse linkage string into comparable components — parse_linkage","text":"Named list x, y, z components numeric ranks","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/possible_linkages.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Possible Linkages — possible_linkages","title":"Generate Possible Linkages — possible_linkages","text":"Given obscure linkage format (\"?\", e.g. \"a2-?\"), function generates possible linkages based format. See valid_linkages() details. ranges possible anomers, first positions, second positions can specified using anomer_range, pos1_range, pos2_range.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/possible_linkages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Possible Linkages — possible_linkages","text":"","code":"possible_linkages(   linkage,   anomer_range = c(\"a\", \"b\"),   pos1_range = 1:2,   pos2_range = 1:9,   include_unknown = FALSE )"},{"path":"https://glycoverse.github.io/glyrepr/reference/possible_linkages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Possible Linkages — possible_linkages","text":"linkage linkage string. anomer_range character vector possible anomers. Default c(\"\", \"b\"). pos1_range numeric vector possible first positions. Default 1:2. pos2_range numeric vector possible second positions. Default 1:9. include_unknown logical value. TRUE, \"?\" included. Default FALSE.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/possible_linkages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Possible Linkages — possible_linkages","text":"character vector possible linkages.","code":""},{"path":[]},{"path":"https://glycoverse.github.io/glyrepr/reference/possible_linkages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Possible Linkages — possible_linkages","text":"","code":"possible_linkages(\"a2-?\") #> [1] \"a2-1\" \"a2-2\" \"a2-3\" \"a2-4\" \"a2-5\" \"a2-6\" \"a2-7\" \"a2-8\" \"a2-9\" possible_linkages(\"??-2\") #> [1] \"a1-2\" \"b1-2\" \"a2-2\" \"b2-2\" possible_linkages(\"a1-3\") #> [1] \"a1-3\" possible_linkages(\"a?-?\", pos1_range = 2, pos2_range = c(2, 3)) #> [1] \"a2-2\" \"a2-3\" possible_linkages(\"?1-6\", include_unknown = TRUE) #> [1] \"a1-6\" \"b1-6\" \"?1-6\""},{"path":"https://glycoverse.github.io/glyrepr/reference/remove_linkages.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove All Linkages from a Glycan — remove_linkages","title":"Remove All Linkages from a Glycan — remove_linkages","text":"function replaces linkages glycan structure \"??-?\".","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/remove_linkages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove All Linkages from a Glycan — remove_linkages","text":"","code":"remove_linkages(glycan)"},{"path":"https://glycoverse.github.io/glyrepr/reference/remove_linkages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove All Linkages from a Glycan — remove_linkages","text":"glycan glyrepr_structure vector.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/remove_linkages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove All Linkages from a Glycan — remove_linkages","text":"glyrepr_structure vector linkages removed.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/remove_linkages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove All Linkages from a Glycan — remove_linkages","text":"","code":"glycan <- o_glycan_core_1(linkage = TRUE) glycan #> <glycan_structure[1]> #> [1] Gal(b1-3)GalNAc(a1- #> # Unique structures: 1 remove_linkages(glycan) #> <glycan_structure[1]> #> [1] Gal(??-?)GalNAc(a1- #> # Unique structures: 1"},{"path":"https://glycoverse.github.io/glyrepr/reference/remove_substituents.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove All Substituents from a Glycan — remove_substituents","title":"Remove All Substituents from a Glycan — remove_substituents","text":"function replaces substituents glycan structure empty strings.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/remove_substituents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove All Substituents from a Glycan — remove_substituents","text":"","code":"remove_substituents(glycan)"},{"path":"https://glycoverse.github.io/glyrepr/reference/remove_substituents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove All Substituents from a Glycan — remove_substituents","text":"glycan glyrepr_structure vector.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/remove_substituents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove All Substituents from a Glycan — remove_substituents","text":"glyrepr_structure vector substituents removed.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/replace_monos_with_colored.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace Monosaccharides in String with Colored Versions — replace_monos_with_colored","title":"Replace Monosaccharides in String with Colored Versions — replace_monos_with_colored","text":"Replace Monosaccharides String Colored Versions","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/replace_monos_with_colored.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace Monosaccharides in String with Colored Versions — replace_monos_with_colored","text":"","code":"replace_monos_with_colored(text, mono_names)"},{"path":"https://glycoverse.github.io/glyrepr/reference/replace_monos_with_colored.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace Monosaccharides in String with Colored Versions — replace_monos_with_colored","text":"text Character string containing monosaccharide names mono_names Character vector monosaccharide names replace","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/replace_monos_with_colored.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace Monosaccharides in String with Colored Versions — replace_monos_with_colored","text":"Character string monosaccharides replaced colored versions","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/seq_glycan.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate glycan sequence recursively — seq_glycan","title":"Generate glycan sequence recursively — seq_glycan","text":"Generate glycan sequence recursively","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/seq_glycan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate glycan sequence recursively — seq_glycan","text":"","code":"seq_glycan(glycan, node, depths)"},{"path":"https://glycoverse.github.io/glyrepr/reference/seq_glycan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate glycan sequence recursively — seq_glycan","text":"glycan igraph object representing glycan structure node Current node depths Vector depths nodes","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/seq_glycan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate glycan sequence recursively — seq_glycan","text":"Character string representing sequence","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/structure_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Map Functions Over Glycan Structure Vectors — structure_map","title":"Map Functions Over Glycan Structure Vectors — structure_map","text":"functions apply function unique structure glycan structure vector, taking advantage hash-based deduplication avoid redundant computation. Similar purrr mapping functions, optimized glycan structure vectors.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/structure_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map Functions Over Glycan Structure Vectors — structure_map","text":"","code":"structure_map(.x, .f, ...)  structure_map_vec(.x, .f, ..., .ptype = NULL)  structure_map_lgl(.x, .f, ...)  structure_map_int(.x, .f, ...)  structure_map_dbl(.x, .f, ...)  structure_map_chr(.x, .f, ...)  structure_map_structure(.x, .f, ...)"},{"path":"https://glycoverse.github.io/glyrepr/reference/structure_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map Functions Over Glycan Structure Vectors — structure_map","text":".x glycan structure vector (glyrepr_structure). .f function takes igraph object returns result. ... Additional arguments passed .f. .ptype prototype return type (structure_map_vec).","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/structure_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map Functions Over Glycan Structure Vectors — structure_map","text":"structure_map(): list structure_map_vec(): atomic vector type specified .ptype structure_map_lgl/int/dbl/chr(): Atomic vectors corresponding type structure_map_structure(): new glyrepr_structure object","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/structure_map.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map Functions Over Glycan Structure Vectors — structure_map","text":"functions compute .f unique structure, map results back original vector positions. much efficient applying .f element individually duplicate structures. structure_map(): Returns list length .x structure_map_vec(): Returns atomic vector length .x structure_map_lgl(): Returns logical vector structure_map_int(): Returns integer vector structure_map_dbl(): Returns double vector structure_map_chr(): Returns character vector structure_map_structure(): Returns new glycan structure vector (.f must return igraph objects)","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/structure_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map Functions Over Glycan Structure Vectors — structure_map","text":"","code":"# Create a structure vector with duplicates core1 <- o_glycan_core_1() core2 <- n_glycan_core() structures <- glycan_structure(core1, core2, core1)  # core1 appears twice  # Map a function that counts vertices - only computed twice, not three times structure_map_int(structures, igraph::vcount) #> [1] 2 5 2  # Map a function that returns logical structure_map_lgl(structures, function(g) igraph::vcount(g) > 5) #> [1] FALSE FALSE FALSE  # Map a function that modifies structure (must return igraph) add_vertex_names <- function(g) {   if (!(\"name\" %in% igraph::vertex_attr_names(g))) {     igraph::set_vertex_attr(g, \"name\", value = paste0(\"v\", seq_len(igraph::vcount(g))))   } else {     g   } } structure_map_structure(structures, add_vertex_names) #> <glycan_structure[3]> #> [1] Gal(b1-3)GalNAc(a1- #> [2] Man(a1-3)[Man(a1-6)]Man(b1-4)GlcNAc(b1-4)GlcNAc(?1- #> [3] Gal(b1-3)GalNAc(a1- #> # Unique structures: 2"},{"path":"https://glycoverse.github.io/glyrepr/reference/structure_map_unique.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Function to Unique Structures Only — structure_map_unique","title":"Apply Function to Unique Structures Only — structure_map_unique","text":"Apply function unique structures glycan structure vector, returning results order unique structures appear. useful need perform expensive computations care unique results.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/structure_map_unique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Function to Unique Structures Only — structure_map_unique","text":"","code":"structure_map_unique(.x, .f, ...)"},{"path":"https://glycoverse.github.io/glyrepr/reference/structure_map_unique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Function to Unique Structures Only — structure_map_unique","text":".x glycan structure vector (glyrepr_structure). .f function takes igraph object returns result. ... Additional arguments passed .f.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/structure_map_unique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Function to Unique Structures Only — structure_map_unique","text":"list results unique structure, named hash codes.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/structure_map_unique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Function to Unique Structures Only — structure_map_unique","text":"","code":"# Create a structure vector with duplicates core1 <- o_glycan_core_1() structures <- glycan_structure(core1, core1, core1)  # same structure 3 times  # Only compute once for the unique structure unique_results <- structure_map_unique(structures, igraph::vcount) length(unique_results)  # 1, not 3 #> [1] 1"},{"path":"https://glycoverse.github.io/glyrepr/reference/structure_to_iupac.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Glycan Structure to IUPAC-like Sequence — structure_to_iupac","title":"Convert Glycan Structure to IUPAC-like Sequence — structure_to_iupac","text":"Convert glycan structure sequence representation form mono(linkage)mono, branches represented square brackets []. backbone chosen longest path, branches, linkages ordered lexicographically smaller linkages backbone.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/structure_to_iupac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Glycan Structure to IUPAC-like Sequence — structure_to_iupac","text":"","code":"structure_to_iupac(glycan)"},{"path":"https://glycoverse.github.io/glyrepr/reference/structure_to_iupac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Glycan Structure to IUPAC-like Sequence — structure_to_iupac","text":"glycan glyrepr_structure vector.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/structure_to_iupac.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Glycan Structure to IUPAC-like Sequence — structure_to_iupac","text":"character vector representing IUPAC sequences.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/structure_to_iupac.html","id":"sequence-format","dir":"Reference","previous_headings":"","what":"Sequence Format","title":"Convert Glycan Structure to IUPAC-like Sequence — structure_to_iupac","text":"sequence follows format mono(linkage)mono, : mono: monosaccharide name optional substituents (e.g., Glc, GlcNAc, Glc3Me) linkage: glycosidic linkage (e.g., b1-4, a1-3) Branches enclosed square brackets [] Substituents appended directly monosaccharide names (e.g., Glc3Me Glc 3Me substituent)","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/structure_to_iupac.html","id":"backbone-selection","dir":"Reference","previous_headings":"","what":"Backbone Selection","title":"Convert Glycan Structure to IUPAC-like Sequence — structure_to_iupac","text":"backbone selected longest path tree. branches, rule applies recursively.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/structure_to_iupac.html","id":"linkage-comparison","dir":"Reference","previous_headings":"","what":"Linkage Comparison","title":"Convert Glycan Structure to IUPAC-like Sequence — structure_to_iupac","text":"Linkages compared lexicographically: First anomeric configuration: ? > b > first position: ? > numbers (numerically) Finally second position: ? > numbers (numerically) Smaller linkages placed backbone, larger ones branches.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/structure_to_iupac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Glycan Structure to IUPAC-like Sequence — structure_to_iupac","text":"","code":"# Simple linear structure structure_to_iupac(o_glycan_core_1()) #> [1] \"Gal(b1-3)GalNAc(a1-\"  # Branched structure   structure_to_iupac(n_glycan_core()) #> [1] \"Man(a1-3)[Man(a1-6)]Man(b1-4)GlcNAc(b1-4)GlcNAc(?1-\"  # Structure with substituents graph <- igraph::make_graph(~ 1-+2) igraph::V(graph)$mono <- c(\"Glc\", \"GlcNAc\") igraph::V(graph)$sub <- c(\"3Me\", \"6Ac\") igraph::E(graph)$linkage <- \"b1-4\" graph$anomer <- \"a1\" graph$alditol <- FALSE glycan <- glycan_structure(graph) structure_to_iupac(glycan)  # Returns \"GlcNAc6Ac(b1-4)Glc3Me(a1-\" #> [1] \"GlcNAc6Ac(b1-4)Glc3Me(a1-\"  # Vectorized structures structs <- glycan_structure(o_glycan_core_1(), n_glycan_core()) structure_to_iupac(structs) #> [1] \"Gal(b1-3)GalNAc(a1-\"                                 #> [2] \"Man(a1-3)[Man(a1-6)]Man(b1-4)GlcNAc(b1-4)GlcNAc(?1-\""},{"path":"https://glycoverse.github.io/glyrepr/reference/valid_linkages.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Linkages are Valid — valid_linkages","title":"Check if Linkages are Valid — valid_linkages","text":"Valid linkages form \"a1-2\", \"b1-4\", \"?-1\", etc. Specifically, pattern xy-z: x: anomer, either \"\", \"b\", \"?\". y: first position, either \"1\", \"2\" \"?\". z: second position, either 1-9 digit \"?\". Can also multiple positions separated \"/\", e.g. \"1/2/3\". \"?\" used \"/\".","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/valid_linkages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Linkages are Valid — valid_linkages","text":"","code":"valid_linkages(linkages)"},{"path":"https://glycoverse.github.io/glyrepr/reference/valid_linkages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Linkages are Valid — valid_linkages","text":"linkages character vector linkages.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/valid_linkages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Linkages are Valid — valid_linkages","text":"logical vector.","code":""},{"path":"https://glycoverse.github.io/glyrepr/reference/valid_linkages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if Linkages are Valid — valid_linkages","text":"","code":"# Valid linkages valid_linkages(c(\"a1-2\", \"?1-4\", \"a?-1\", \"b?-?\", \"??-?\", \"a1/2-3\")) #> [1]  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  # Invalid linkages valid_linkages(c(\"a1-2/?\", \"1-4\", \"a/b1-2\", \"c1-2\", \"a9-1\")) #> [1] FALSE FALSE FALSE FALSE FALSE"}]
